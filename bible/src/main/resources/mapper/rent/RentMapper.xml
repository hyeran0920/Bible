<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.library.bible.rent.repository.IRentRepository">
	
	<!-- ResultMap 정의 -->
	<resultMap id="rentMap" type="Rent">
		<id property="rentId" column="rent_id"/>
		<result property="bookId" column="book_id"/>
		<result property="memId" column="mem_id"/>
		<result property="rentDate" column="rent_date"/>
		<result property="rentDueDate" column="rent_due_date"/>
		<result property="rentFinishDate" column="rent_finish_date"/>
		<result property="rentStatus" column="rent_status"/>
	</resultMap>
	
	<!-- 모든 대여 조회 -->
	<select id="selectAllRent" resultMap="rentMap">
		SELECT
			rent_id,
			book_id,
			mem_id,
			rent_date,
			rent_due_date,
			rent_finish_date,
			rent_status
		FROM rent
	</select>
	
	<!-- rentIds로 rents 조회 -->
	<select id="selectRentsByRendIds"  resultMap="rentMap">
		SELECT
			rent_id,
			book_id,
			mem_id,
			rent_date,
			rent_due_date,
			rent_finish_date,
			rent_status
		FROM rent
	    WHERE rent_id IN
	    <foreach collection="rentIds" item="rentId" open="(" separator="," close=")">
	        #{rentId}
	    </foreach>
	</select>
	
	<!-- 특정 대여 조회 -->
	<select id="selectRent" resultMap="rentMap">
		SELECT
			rent_id,
			book_id,
			mem_id,
			rent_date,
			rent_due_date,
			rent_finish_date,
			rent_status
		FROM rent
		WHERE rent_id = #{rentId}
	</select>
	
	<!-- 해당 사용자의 rent 기록 조회 -->
	<select id="selectRentsByMemIdAndRentStatus"  resultMap="rentMap">
        SELECT 
			rent_date,
			rent_id,
			mem_id,
			book_id,
			rent_due_date,
			rent_finish_date,
			rent_status
        FROM rent
    	<where>
            mem_id = #{memId}
	        <if test="rentStatus != null">
	            AND rent_status = #{rentStatus}
	        </if>
	    </where>
	</select>
	
	<!-- 해당 사용자의 rent 기록 조회 + 여러 rent_status 조회 -->
	<select id="selectRentsByMemIdAndRentStatusList" resultMap="rentMap">
	    SELECT 
	        rent_date,
	        rent_id,
			mem_id,
	        book_id,
	        rent_due_date,
	        rent_finish_date,
	        rent_status
	    FROM rent
	    <where>
	        mem_id = #{memId}
	        <if test="rentStatusList != null and !rentStatusList.isEmpty()">
	            AND rent_status IN
	            <foreach collection="rentStatusList" item="status" open="(" separator="," close=")">
	                #{status}
	            </foreach>
	        </if>
	    </where>
	</select>

	<!-- 대여 추가 -->
	<insert id="insertRent" parameterType="Rent" useGeneratedKeys="true" keyProperty="rentId" keyColumn="rent_id">
	    INSERT INTO rent 
	        (book_id, mem_id, rent_date, rent_due_date, rent_finish_date, rent_status)
	    VALUES 
	        (#{bookId}, #{memId}, #{rentDate}, #{rentDueDate}, #{rentFinishDate}, #{rentStatus})
	</insert>
		
	<!-- 대여 수정 -->
	<update id="updateRent" parameterType="Rent">
		UPDATE rent
		SET
			book_id = #{bookId},
			mem_id = #{memId},
			rent_due_date = #{rentDueDate},
			rent_finish_date = #{rentFinishDate},
			rent_status = #{rentStatus}
		WHERE rent_id = #{rentId}
	</update>
	
	<!-- 대여 삭제 -->
	<delete id="deleteRent">
		DELETE FROM rent WHERE rent_id = #{rentId}
	</delete>
	
	<!-- ResultMap 정의 -->
	<resultMap id="rentPageResponseMap" type="RentPageResponse">
	    <result property="rentDate" column="rent_date"/>
	    <collection property="rents" ofType="RentDetailResponse">
	        <id property="rentId" column="rent_id"/>
	        <result property="bookId" column="book_id"/>
	        <result property="rentDueDate" column="rent_due_date"/>
	        <result property="rentFinishDate" column="rent_finish_date"/>
	        <result property="rentStatus" column="rent_status"/>
	    </collection>
	</resultMap>

	 <!-- 페이징 처리된 대여 이력 조회 -->
    <select id="selectRentResponses" resultMap="rentPageResponseMap">
        SELECT 
			rent_date,
			rent_id,
			book_id,
			rent_due_date,
			rent_finish_date,
			rent_status
        FROM rent
    	<where>
	        <if test="memId != 0">
	            mem_id = #{memId}
	        </if>
	        <if test="rentStatus != null">
	            AND rent_status = #{rentStatus}
	        </if>
	    </where>
        ORDER BY rent_date DESC, rent_id ASC
        OFFSET #{offset} ROWS FETCH NEXT #{limit} ROWS ONLY
    </select>

	<!-- 전체 카운트 조회 -->
    <select id="countRent" resultType="int">
        SELECT COUNT(*)
        FROM rent
	    <where>
	        <if test="memId != 0">
	            mem_id = #{memId}
	        </if>
	        <if test="rentStatus != null">
	            AND rent_status = #{rentStatus}
	        </if>
	    </where>
    </select>
</mapper>